const hre = require("hardhat");

async function main() {
  const [deployer] = await hre.ethers.getSigners();
  console.log("Deploying contracts with the account:", deployer.address);

  // Get the GRULL token address from command line arguments or use a default
  // You can run this script with: npx hardhat run scripts/deploy-juror-staking.js -- --token 0x123...
  const grullTokenAddress = process.env.GRULL_TOKEN_ADDRESS || "0x..."; // Replace with actual token address
  
  // Deploy the JurorStaking contract
  const minimumStake = hre.ethers.parseEther("100"); // 100 GRULL tokens minimum stake
  
  const JurorStaking = await hre.ethers.getContractFactory("JurorStaking");
  const jurorStaking = await JurorStaking.deploy(grullTokenAddress, minimumStake);
  await jurorStaking.waitForDeployment();

  const jurorStakingAddress = await jurorStaking.getAddress();
  console.log("JurorStaking deployed to:", jurorStakingAddress);
  console.log("Minimum stake:", hre.ethers.formatEther(minimumStake), "GRULL");
  
  // Save the addresses to a file for the frontend to use
  const fs = require('fs');
  const path = require('path');
  
  const configPath = path.join(__dirname, '..', 'frontend', 'src', 'config.js');
  const configContent = `
// Contract addresses - DO NOT EDIT THIS FILE MANUALLY
// This file is automatically generated during deployment

export const JUROR_STAKING_ADDRESS = '${jurorStakingAddress}';
export const TOKEN_ADDRESS = '${grullTokenAddress}';
`;
  
  fs.writeFileSync(configPath, configContent);
  console.log(`Contract addresses saved to ${configPath}`);
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  }); 